name: Deploy App in KinD

on:
  push:
    branches:
      - 'main'
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag todos:v1
    # - name: Save Docker image as tarball
    #   run: docker save -o /tmp/todos.tar todos:v1
    # - name: Upload Docker image as artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: docker-image
    #     path: /tmp/todos.tar
    - name: Login to Docker Hub
      run: |
        cat helm-charts/todo/values.yaml
        echo ${{ secrets.DB_USERNAME }}
        echo ${{ secrets.DB_PASSWORD }}
        sed -i 's/USERNAME/${{ secrets.DB_USERNAME }}/g' helm-charts/todo/values.yaml
        sed -i 's/PASSWORD/${{ secrets.DB_PASSWORD }}/g' helm-charts/todo/values.yaml
        cat helm-charts/todo/values.yaml
        # HASH=$(${{ github.sha }} | cut -c1-6)
        # sed -i 's/IMAGE_TAG/NEW_VAR/g' helm-charts/todo/values.yaml
        sed

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Download Docker image tarball artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: docker-image
  #         path: /tmp
  #     - name: Load Docker image from tarball
  #       run: |
  #         docker load --input /tmp/todos.tar
  #         docker image ls -a
  #     - name: Create k8s Kind Cluster
  #       uses: helm/kind-action@v1 
  #     - name: Run KinD commands
  #       run: |
  #         kind version
  #         kind get clusters
  #         kind load docker-image todos:v1 --name chart-testing
  #     - name: Copying helm chart from repository
  #       uses: actions/checkout@v4
  #       with:
  #         sparse-checkout: 'helm-charts'
  #         sparse-checkout-cone-mode: false
  #     - name: Install helm charts
  #       run: |
  #         helm version
  #         sed -i 's/IMAGE_TAG/NEW_VAR/g' helm-charts/todo/values.yaml
  #         helm install todos helm-charts/todo/
  #         kubectl get all
  #         echo "++++++++++++++++++++++++++++++++++++++++++"
  #         echo "++++++++++++++++++++++++++++++++++++++++++"
  #         sleep 300
  #         kubectl get all
